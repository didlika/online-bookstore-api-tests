name: API Tests CI/CD

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      base_url:
        description: 'API Base URL'
        required: false
        default: 'https://fakerestapi.azurewebsites.net/api/v1'

env:
  DOCKER_IMAGE_NAME: playwright-api-tests
  BASE_URL: https://fakerestapi.azurewebsites.net/api/v1

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Docker image
        run: docker save ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} | gzip > docker-image.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: docker-image.tar.gz
          retention-days: 1

  test:
    name: Run All Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load < docker-image.tar.gz

      - name: Run tests
        continue-on-error: true
        id: run-tests
        run: |
          docker run \
            -e CI=true \
            -e BASE_URL=${{ github.event.inputs.base_url || env.BASE_URL }} \
            -e WORKERS=2 \
            -v ${{ github.workspace }}/playwright-report:/app/playwright-report \
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

      - name: Check test results
        run: |
          if [ "${{ steps.run-tests.outcome }}" == "failure" ]; then
            echo "⚠️ Tests failed but report was generated" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  publish-report:
    name: Publish Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        id: download-artifact
        continue-on-error: true
        with:
          name: playwright-report
          path: playwright-report

      - name: Check if report exists
        id: check-report
        run: |
          if [ -d "playwright-report" ] && [ -f "playwright-report/index.html" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "⚠️ No Playwright report found to publish" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Set destination
        if: steps.check-report.outputs.exists == 'true'
        id: dest
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "path=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            echo "path=build-${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi

      - uses: peaceiris/actions-gh-pages@v3
        if: steps.check-report.outputs.exists == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report
          destination_dir: ${{ steps.dest.outputs.path }}
          keep_files: true

      - name: Add report link to job summary
        if: steps.check-report.outputs.exists == 'true'
        run: |
          REPORT_URL="https://${GITHUB_REPOSITORY_OWNER}.github.io/${GITHUB_REPOSITORY#*/}/${{ steps.dest.outputs.path }}/index.html"
          echo "## 🎭 Playwright Test Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **[View Full Report]($REPORT_URL)**" >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.check-report.outputs.exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const url = `https://${context.repo.owner}.github.io/${context.repo.repo}/${{ steps.dest.outputs.path }}/`;
            
            const comment = `## 🎭 Test Report
            
            📊 **[View Playwright Report](${url}index.html)**
            
            📥 [Download Artifact](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${{ github.run_id }})`;
            
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.pull_request.number }}
            });
            
            const existing = comments.find(c => c.user.type === 'Bot' && c.body.includes('Test Report'));
            
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ github.event.pull_request.number }},
                body: comment
              });
            }
