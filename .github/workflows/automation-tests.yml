name: API Tests CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      base_url:
        description: 'API Base URL'
        required: false
        default: 'https://fakerestapi.azurewebsites.net/api/v1'

env:
  DOCKER_IMAGE_NAME: playwright-api-tests
  BASE_URL: https://fakerestapi.azurewebsites.net/api/v1

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Docker image
        run: docker save ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} | gzip > docker-image.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: docker-image.tar.gz
          retention-days: 1

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        suite: [books, authors]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load < docker-image.tar.gz

      - name: Run ${{ matrix.suite }} tests
        run: |
          docker run \
            -e CI=true \
            -e BASE_URL=${{ github.event.inputs.base_url || env.BASE_URL }} \
            -e WORKERS=2 \
            -v ${{ github.workspace }}/playwright-report-${{ matrix.suite }}:/app/playwright-report \
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} \
            npx playwright test api-tests/${{ matrix.suite }}/ --reporter=html,list

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.suite }}
          path: playwright-report-${{ matrix.suite }}/
          retention-days: 30

  report:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          path: all-reports

      - name: Generate summary
        run: |
          echo "# ðŸŽ­ Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Suites" >> $GITHUB_STEP_SUMMARY
          
          for dir in all-reports/playwright-report-*; do
            if [ -d "$dir" ]; then
              suite=$(basename "$dir" | sed 's/playwright-report-//')
              size=$(du -sh "$dir" 2>/dev/null | cut -f1)
              echo "- âœ… **${suite}** (${size})" >> $GITHUB_STEP_SUMMARY
            fi
          done

  publish-report:
    name: Publish Reports
    runs-on: ubuntu-latest
    needs: test
    if: always() && (github.event_name == 'push' || github.event_name == 'pull_request')
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          path: reports

      - name: Prepare reports
        run: |
          mkdir -p gh-pages
          cat > gh-pages/index.html << 'EOF'
          <!DOCTYPE html>
          <html><head><title>Test Reports</title>
          <style>
            body{font-family:Arial;max-width:1200px;margin:50px auto;padding:20px}
            h1{color:#333}.info{background:#f5f5f5;padding:15px;border-radius:5px;margin:20px 0}
            ul{list-style:none;padding:0}li{margin:10px 0}
            a{color:#0066cc;text-decoration:none;font-size:18px}a:hover{text-decoration:underline}
          </style></head><body>
          <h1>ðŸŽ­ Test Reports</h1>
          <div class='info'>
          EOF
          
          echo "<p><strong>Build:</strong> ${{ github.run_number }}</p>" >> gh-pages/index.html
          echo "<p><strong>Branch:</strong> ${{ github.ref_name }}</p>" >> gh-pages/index.html
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "<p><strong>PR:</strong> #${{ github.event.pull_request.number }}</p>" >> gh-pages/index.html
          fi
          
          echo "</div><h2>Test Suites</h2><ul>" >> gh-pages/index.html
          
          for dir in reports/playwright-report-*; do
            if [ -d "$dir" ]; then
              suite=$(basename "$dir" | sed 's/playwright-report-//')
              mkdir -p "gh-pages/${suite}"
              cp -r "$dir"/* "gh-pages/${suite}/"
              echo "<li>ðŸ“„ <a href='${suite}/index.html'>${suite^} Tests</a></li>" >> gh-pages/index.html
            fi
          done
          
          echo "</ul></body></html>" >> gh-pages/index.html

      - name: Set destination
        id: dest
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "path=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            echo "path=build-${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi

      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages
          destination_dir: ${{ steps.dest.outputs.path }}
          keep_files: true

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const url = `https://${context.repo.owner}.github.io/${context.repo.repo}/${{ steps.dest.outputs.path }}/`;
            
            const comment = `## ðŸŽ­ Test Reports
            
            ðŸ“Š **[View Reports](${url})**
            
            - [Books Tests](${url}books/)
            - [Authors Tests](${url}authors/)
            
            ðŸ“¥ [Download Artifacts](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${{ github.run_id }})`;
            
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.pull_request.number }}
            });
            
            const existing = comments.find(c => c.user.type === 'Bot' && c.body.includes('Test Reports'));
            
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ github.event.pull_request.number }},
                body: comment
              });
            }
